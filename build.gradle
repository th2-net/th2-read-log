/*
 *  Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
    id "com.jfrog.bintray" version '1.8.5'
}

group 'com.exactpro.th2'
version release_version

repositories {
    mavenCentral()
    maven {
        name 'Bintray'
        url 'https://dl.bintray.com/exactpro/th2'
    }
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:2.3.+')

    implementation 'com.exactpro.th2:common'
    implementation 'com.exactpro.th2:grpc-common'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'io.grpc:grpc-netty'
    implementation 'io.grpc:grpc-stub'
    implementation 'io.grpc:grpc-protobuf'
    implementation 'com.google.protobuf:protobuf-java-util'

    implementation 'net.logstash.logback:logstash-logback-encoder:5.2'

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'

    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'org.slf4j:slf4j-api'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.mockito:mockito-core:3.6.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title': '',
                'Specification-Vendor': 'Exactpro Systems LLC',
                'Implementation-Title': project.archivesBaseName,
                'Implementation-Vendor': 'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version': project.version
        )
    }
}

description = 'DataReaderClient'
sourceCompatibility = '11'
applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

application {
    mainClassName = "com.exactpro.th2.readlog.Main"
}
